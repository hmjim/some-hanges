<?php

/**
 * Theme functions and definitions.
 * This child theme was generated by Merlin WP.
 *
 * @link https://developer.wordpress.org/themes/basics/theme-functions/
 */

/*
* If your child theme has more than one .css file (eg. ie.css, style.css, main.css) then
* you will have to make sure to maintain all of the parent theme dependencies.
*
* Make sure you're using the correct handle for loading the parent theme's styles.
* Failure to use the proper tag will result in a CSS file needlessly being loaded twice.
* This will usually not affect the site appearance, but it's inefficient and extends your page's loading time.
*
* @link https://codex.wordpress.org/Child_Themes
*/

namespace {

    use Voxel\Post;

    function voxel_child_enqueue_styles()
    {
        wp_enqueue_style('voxel-child-style', get_template_directory_uri() . '/style.css', false, wp_get_theme()->get('Version'));
    }

    add_action('wp_enqueue_scripts', 'voxel_child_enqueue_styles');

    add_action('admin_head', 'voxel_custom_admin_styles');

    function voxel_custom_admin_styles()
    {
        echo '<style>
    .form-field-grid {
    grid-template-columns: 300px 300px!important;
	}
  </style>';
    }


    function index_get_related_posts($post_id, $rel_key, $rel_type)
    {
        global $wpdb;

        if ($rel_type == 'has_one' || $rel_type == 'has_many') {
            $rows = $wpdb->get_col($wpdb->prepare(<<<SQL
				SELECT child_id
				FROM {$wpdb->prefix}voxel_relations
				WHERE parent_id = %d AND relation_key = %s
				ORDER BY `order` ASC
			SQL, $post_id, $rel_key));
        } else {
            $rows = $wpdb->get_col($wpdb->prepare(<<<SQL
				SELECT parent_id
				FROM {$wpdb->prefix}voxel_relations
				WHERE child_id = %d AND relation_key = %s
				ORDER BY `order` ASC
			SQL, $post_id, $rel_key));
        }

        $ids = array_map('absint', (array)$rows);

        $is_multiple = in_array($rel_type, ['has_many', 'belongs_to_many'], true);
        if (!$is_multiple && !empty($ids)) {
            $ids = [array_shift($ids)];
        }

        return $ids;
    }

    function index_create_relation($parent_id, $child_id, $rel_key)
    {

        global $wpdb;

        // delete existing relations
        $wpdb->delete($wpdb->prefix . 'voxel_relations', [
            'parent_id' => $parent_id,
            'relation_key' => $rel_key,
        ]);

        // insert new relations


        $query = "INSERT INTO {$wpdb->prefix}voxel_relations (`parent_id`, `child_id`, `relation_key`, `order`) VALUES ";
        $query .= $wpdb->prepare('(%d,%d,%s,%d)', $parent_id, $child_id, $rel_key, 0);
        $insert_id = $wpdb->query($query);

        // clear cache

        $cache_key = sprintf('relations:%s:%d:%s', $rel_key, $child_id, 'child_id');
        wp_cache_delete($cache_key, 'voxel');

        return $insert_id;

    }


    function vat_estimation_feild_save($post_id)
    {

        require 'app/controllers/frontend/create_title.php';

    }

    add_action('wp_insert_post', 'vat_estimation_feild_save', 99);
    add_action('wp_update_post', 'vat_estimation_feild_save', 99);
    add_action('wp_save_post', 'vat_estimation_feild_save', 99);

    function my_saved_post($post_id)
    {

        wp_update_post(array(
            'ID' => $post_id,
            'post_status' => 'publish'
        ));

    }

    add_action('pmxi_saved_post', 'my_saved_post', 99);


    function price_history_shortcode($atts)
    {
        $post_id = get_the_ID();
        $output = '';

        // Retrieve the price history array
        $price_history = get_post_meta($post_id, 'price_history', true);

        // Unserialize the price history array
        if ($price_history) {
            $price_history = unserialize($price_history);

            // Generate the output HTML
            if (!empty($price_history)) {
                $output .= '<b>Price Change History</b><table>';

                foreach ($price_history as $entry) {
                    $timestamp = $entry['timestamp'];
                    $value = $entry['value'];

                    $output .= '<tr>';
                    $output .= '<td>&euro;' . number_format_i18n($value) . '</td';
                    $output .= '<td> on ' . date('Y-m-d', $timestamp) . '</td>';
                    $output .= '</tr>';
                }

                $output .= '</table>';
            } else {
                $output .= '<!-- No price history available. -->';
            }
        } else {
            $output .= '<!--- No price history available. -->';
        }

        return $output;
    }

    add_shortcode('price_history', 'price_history_shortcode');

    function index_title_link($atts)
    {
        $output = '';
        $post_id = $atts['id'];

        //$post_id = get_the_id();

        if ($post_id) {
            $output .= '<a href="' . get_permalink($post_id) . '">' . get_the_title($post_id) . '</a>';
        }
        return $output;
    }

    add_shortcode('title_link', 'index_title_link');


    function sendNotification($title, $subject, $link)
    {
        if (!class_exists('WonderPushAdmin')) {
            return;
        }
        $client = get_wonderpush_client();
        $client->deliveries()->create(array(
            'notification' => array(
                'alert' => array(
                    'title' => $title,
                    'text' => $subject,
                    'targetUrl' => $link,
                ),
            ),
            // Option 1: Target all your users
            'targetSegmentIds' => '@ALL',
            // Option 2: Target specific user by ids
            //'targetUserIds' => array('johndoe', 'janedoe'),
            // Option 3: Target by tags
            //'targetTags' => array('news'),
            // More options are available, read our Management API documentation at: https://docs.wonderpush.com/reference/post-deliveries
        ));
    }


    /* ADD GTM TO HEAD AND BELOW OPENING BODY */

    add_action('wp_head', 'google_tag_manager_head', 20);
    function google_tag_manager_head()
    { ?>
        <!-- Google Tag Manager -->
        <script>(function (w, d, s, l, i) {
                w[l] = w[l] || [];
                w[l].push({
                    'gtm.start':
                        new Date().getTime(), event: 'gtm.js'
                });
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
                j.async = true;
                j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
                f.parentNode.insertBefore(j, f);
            })(window, document, 'script', 'dataLayer', 'GTM-TCJRQST');</script>
        <!-- End Google Tag Manager -->
        <!-- Meta Pixel Code -->
        <script>
            !function (f, b, e, v, n, t, s) {
                if (f.fbq) return;
                n = f.fbq = function () {
                    n.callMethod ?
                        n.callMethod.apply(n, arguments) : n.queue.push(arguments)
                };
                if (!f._fbq) f._fbq = n;
                n.push = n;
                n.loaded = !0;
                n.version = '2.0';
                n.queue = [];
                t = b.createElement(e);
                t.async = !0;
                t.src = v;
                s = b.getElementsByTagName(e)[0];
                s.parentNode.insertBefore(t, s)
            }(window, document, 'script',
                'https://connect.facebook.net/en_US/fbevents.js');
            fbq('init', '285348897347958');
            fbq('track', 'PageView');
        </script>
        <script>
            window.addEventListener('load', function () {
                // Check if the page URL contains the hash "#recover_account"
                if (window.location.hash === "#recover_account") {
                    // Find the anchor element with the href "#recover_account"
                    var recoverAccountLink = document.querySelector('a[href="#recover_account"]');

                    // Trigger a click event on the anchor element
                    if (recoverAccountLink) {
                        recoverAccountLink.click();
                    }
                }
            });
        </script>
        <!-- Meta Pixel End -->
        <?php
        //	Temporary remove elements for app approval
        if (stripos($_SERVER['HTTP_USER_AGENT'], 'index-ios-app') !== false) {
            ?>
            <style>
                .dashboard_current_plan,
                .menu-item-5174,
                .ts-social-connect,
                .elementor-element-5849dbae,
                .elementor-element-80694e3,
                #cmplz-cookiebanner-container {
                    display: none !important;
                }
            </style>

            <?php
        }


    }

    add_action('wp_body_open', 'google_tag_manager_body', 100);
    function google_tag_manager_body()
    { ?>
        <!-- Google Tag Manager (noscript) -->
        <noscript>
            <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TCJRQST"
                    height="0" width="0" style="display:none;visibility:hidden"></iframe>
        </noscript>
        <!-- End Google Tag Manager (noscript) -->
        <!-- Meta Pixel Code -->
        <noscript><img height="1" width="1" style="display:none"
                       src="https://www.facebook.com/tr?id=285348897347958&ev=PageView&noscript=1"
            /></noscript>
        <!-- End Meta Pixel Code -->


        <?php
    }


    add_action('admin_head', 'maybe_modify_admin_css');
    function maybe_modify_admin_css()
    {
        echo '<style>
            /*div#titlediv {display: none;}
            div#titlediv input#title {pointer-events:none;}*/
        </style>';
    }

    function voxel_child_enqueue_filter()
    {
        wp_enqueue_style('voxel-child-filter-style', get_stylesheet_directory_uri() . '/assets/css/filter.css', false, wp_get_theme()->get('Version') . '.1.3');
        wp_enqueue_script('voxel-child-fields-validation', get_stylesheet_directory_uri() . '/assets/js/fields-validation.js', false, wp_get_theme()->get('Version') . '.1.4');
    }

    add_action('wp_enqueue_scripts', 'voxel_child_enqueue_filter', 999);


//add_action('wp_print_scripts', 'index_change_scripts', 100);
    function index_change_scripts()
    {

        wp_dequeue_script('vx:search-form.js');
        wp_deregister_script('vx:search-form.js');
        wp_enqueue_script('index_search_form', get_stylesheet_directory_uri() . '/assets/dist/search-form.js', array('vx:commons.js'));

    }

//add_action('wp_enqueue_scripts', 'index_debug_dequeue', 10000);

    function index_debug_dequeue()
    {
        if (wp_script_is('vx:search-form.js', 'enqueued')) {
            echo 'The script is enqueued';
        } elseif (wp_script_is('vx:search-form.js', 'registered')) {
            echo 'The script is registered';
        } else {
            echo 'The script is not enqueued or registered';
        }
    }
	
	